{"version":3,"sources":["models/Ability.ts","models/BaseStat.ts","models/Pokemon.ts","models/Converter.ts","services/PokemonService.ts","components/AbilityItem/AbilityItem.tsx","components/CardAbilityList/CardAbilityList.tsx","components/CardAbilityPanel/CardAbilityPanel.tsx","components/NameLabel/NameLabel.tsx","components/HeightLabel/HeightLabel.tsx","components/WeightLabel/WeightLabel.tsx","components/CardParameters/CardParameters.tsx","components/StatItem/StatItem.tsx","components/CardStatsTable/CardStatsTable.tsx","components/TypeBadge/TypeBadge.tsx","components/CardTypeList/CardTypeList.tsx","components/PokemonImg/PokemonImg.tsx","components/Card/Card.tsx","components/Button/Button.tsx","components/Input/Input.tsx","components/Search/Search.tsx","components/Main/Main.tsx","App.tsx","index.tsx"],"names":["Ability","name","isHidden","this","BaseStat","value","Pokemon","image","height","weight","types","abilities","baseStats","Converter","obj","sprites","other","front_default","map","item","toType","toAbility","stats","toBaseStat","abilityObj","ability","is_hidden","baseObj","base_stat","stat","typeObj","type","PokemonService","baseUrl","axios","create","baseURL","get","then","response","toPokemon","data","AbilityItem","abilityItem","css","marginBottom","textTransform","getName","CardAbilityList","abilityItemTitle","marginTop","flex","textAlign","fontSize","display","filter","getIsHidden","idx","CardAbilityPanel","cardAbilityPanel","justifyContent","NameLabel","nameLabel","letterSpacing","fontWeight","margin","HeightLabel","heightLabel","cardLabel","WeightLabel","weightLabel","CardParameters","cardParameters","StatItem","baseStat","cardStatsTableData","width","padding","cardStatsTableHeader","getValue","CardStatsTable","cardStatsTable","TypeBadge","marginRight","color","letterTpacing","lineHeight","background","badgeColor","getBadgeColor","borderRadius","CardTypeList","cardTypeListContainer","position","top","right","transform","PokemonImg","src","maxHeight","alt","Card","pokemon","cardContainer","card","cardBackground","getGradient","getTypes","boxShadow","cardImageContainer","backgroundColor","cardCaption","getImage","getHeight","getWeight","getBaseStats","getAbilities","Button","onButtonClick","button","border","onClick","Input","inputValue","onInputChange","input","onChange","placeholder","Search","searchContainer","Main","pokemonService","useState","setInputValue","setPokemon","event","getPokemon","console","log","target","App","app","fontFamily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc6dcc09.chunk.js","sourcesContent":["export default class Ability {\r\n  private name: string;\r\n  private isHidden: boolean;\r\n\r\n  constructor(name: string, isHidden: boolean) {\r\n    this.name = name;\r\n    this.isHidden = isHidden;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public getIsHidden(): boolean {\r\n    return this.isHidden;\r\n  }\r\n}\r\n","export default class BaseStat {\r\n  private value: number;\r\n  private name: string;\r\n\r\n  constructor(value: number, name: string) {\r\n    this.value = value;\r\n    this.name = name;\r\n  }\r\n\r\n  public getValue(): number {\r\n    return this.value;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n}\r\n","import Ability from \"./Ability\";\r\nimport BaseStat from \"./BaseStat\";\r\n\r\nexport default class Pokemon {\r\n  private image: string;\r\n  private name: string;\r\n  private height: number;\r\n  private weight: number;\r\n  private types: string[];\r\n  private abilities: Ability[];\r\n  private baseStats: BaseStat[];\r\n\r\n  constructor(\r\n    image: string,\r\n    name: string,\r\n    height: number,\r\n    weight: number,\r\n    types: string[],\r\n    abilities: Ability[],\r\n    baseStats: BaseStat[]\r\n  ) {\r\n    this.image = image;\r\n    this.name = name;\r\n    this.height = height;\r\n    this.weight = weight;\r\n    this.types = types;\r\n    this.abilities = abilities;\r\n    this.baseStats = baseStats;\r\n  }\r\n\r\n\r\n\tpublic getImage(): string {\r\n\t\treturn this.image;\r\n\t}\r\n\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public getHeight(): number {\r\n    return this.height;\r\n  }\r\n  public getWeight(): number {\r\n    return this.weight;\r\n  }\r\n\r\n  public getTypes(): string[] {\r\n    return this.types;\r\n  }\r\n\r\n  public getAbilities(): Ability[] {\r\n    return this.abilities;\r\n  }\r\n\r\n  public getBaseStats(): BaseStat[] {\r\n    return this.baseStats;\r\n  }\r\n}\r\n","import Ability from \"./Ability\";\r\nimport BaseStat from \"./BaseStat\";\r\nimport Pokemon from \"./Pokemon\";\r\n\r\nexport default class Converter {\r\n  static toPokemon(obj: any): Pokemon {\r\n    return new Pokemon(\r\n      obj.sprites.other[\"official-artwork\"].front_default,\r\n      obj.name,\r\n      obj.height,\r\n      obj.weight,\r\n      obj.types.map((item: any) => this.toType(item)),\r\n      obj.abilities.map((item: any) => this.toAbility(item)),\r\n      obj.stats.map((item: any) => this.toBaseStat(item))\r\n    );\r\n  }\r\n\r\n  static toAbility(abilityObj: any): Ability {\r\n    return new Ability(abilityObj.ability.name, abilityObj.is_hidden);\r\n  }\r\n\r\n  static toBaseStat(baseObj: any): BaseStat {\r\n    return new BaseStat(baseObj.base_stat, baseObj.stat.name);\r\n  }\r\n\r\n  static toType(typeObj: any): string[] {\r\n    return typeObj.type.name;\r\n  }\r\n}\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport Converter from \"../models/Converter\";\r\nimport Pokemon from \"../models/Pokemon\";\r\n\r\nexport default class PokemonService {\r\n  private baseUrl: string;\r\n  private axios: AxiosInstance;\r\n\r\n  constructor(baseUrl: string) {\r\n    this.baseUrl = baseUrl;\r\n    this.axios = axios.create({\r\n      baseURL: this.baseUrl,\r\n    });\r\n  }\r\n\r\n  public getPokemon(name: string): Promise<Pokemon> {\r\n    return this.axios\r\n      .get(`/pokemon/${name}`)\r\n      .then(function (response) {\r\n        return Converter.toPokemon(response.data);\r\n      });\r\n  }\r\n\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport Ability from \"../../models/Ability\";\r\n\r\ninterface IAbilityItemProps {\r\n  ability: Ability;\r\n}\r\n\r\nexport const AbilityItem: React.FC<IAbilityItemProps> = ({ ability }) => {\r\n  const abilityItem = css({\r\n    marginBottom: \"3px\",\r\n    textTransform: \"capitalize\",\r\n  });\r\n  return <div css={abilityItem}>{ability.getName()}</div>;\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport Ability from \"../../models/Ability\";\r\nimport { AbilityItem } from \"../AbilityItem/AbilityItem\";\r\n\r\ninterface ICardAbilitiesProps {\r\n  abilities: Ability[];\r\n  isHidden: boolean;\r\n}\r\n\r\nexport const CardAbilityList: React.FC<ICardAbilitiesProps> = ({\r\n  abilities,\r\n  isHidden,\r\n}) => {\r\n  const abilityItemTitle = css({\r\n    marginTop: \"1em\",\r\n    marginBottom: \"0.5em\",\r\n    flex: \"1 0\",\r\n    textAlign: \"center\",\r\n  });\r\n  const abilityItem = css({\r\n    fontSize: \"10px\",\r\n    textTransform: \"uppercase\",\r\n    display: \"block\",\r\n    marginBottom: \"3px\",\r\n  });\r\n\r\n  return (\r\n    <h4 css={abilityItemTitle}>\r\n      <span css={abilityItem}>{isHidden ? \"Hidden\" : \"\"} Ability</span>\r\n      {abilities\r\n        .filter((ability) => ability.getIsHidden() === isHidden)\r\n        .map((ability, idx) => (\r\n          <AbilityItem ability={ability} key={idx}/>\r\n        ))}\r\n    </h4>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport Ability from \"../../models/Ability\";\r\nimport { CardAbilityList } from \"../CardAbilityList/CardAbilityList\";\r\n\r\ninterface ICardAbilityPanelProps {\r\n  abilities: Ability[];\r\n}\r\n\r\nexport const CardAbilityPanel: React.FC<ICardAbilityPanelProps> = ({\r\n  abilities,\r\n}) => {\r\n  const cardAbilityPanel = css({\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  });\r\n\r\n  return (\r\n    <div css={cardAbilityPanel}>\r\n      <CardAbilityList abilities={abilities} isHidden={false} />\r\n      <CardAbilityList abilities={abilities} isHidden={true} />\r\n    </div>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\n\r\ninterface INameLabelProps {\r\n  name: string;\r\n}\r\n\r\nexport const NameLabel: React.FC<INameLabelProps> = ({ name }) => {\r\n  const nameLabel = css({\r\n    letterSpacing: \"0.02em\",\r\n    fontWeight: \"bold\",\r\n    flex: \"1 0\",\r\n    margin: \"0\",\r\n    textAlign: \"center\",\r\n  });\r\n\r\n  return <h2 css={nameLabel}>{name}</h2>;\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\n\r\ninterface IHeightLabelProps {\r\n  height: number;\r\n}\r\n\r\nexport const HeightLabel: React.FC<IHeightLabelProps> = ({ height }) => {\r\n  const heightLabel = css({\r\n    margin: \"0\",\r\n    flex: \"1 0\",\r\n  });\r\n\r\n  const cardLabel = css({\r\n    fontSize: \"10px\",\r\n    textTransform: \"uppercase\",\r\n    display: \"block\",\r\n    marginBottom: \"3px\",\r\n  });\r\n\r\n  return (\r\n    <h4 css={heightLabel}>\r\n      <span css={cardLabel}>Height</span>\r\n      {height}\r\n    </h4>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\n\r\ninterface IWeightBadgeProps {\r\n  weight: number;\r\n}\r\n\r\nexport const WeightLabel: React.FC<IWeightBadgeProps> = ({ weight }) => {\r\n  const weightLabel = css({\r\n    margin: \"0\",\r\n    flex: \"1 0\",\r\n    textAlign: \"right\",\r\n  });\r\n\r\n  const cardLabel = css({\r\n    fontSize: \"10px\",\r\n    textTransform: \"uppercase\",\r\n    display: \"block\",\r\n    marginBottom: \"3px\",\r\n    \r\n  });\r\n\r\n  return (\r\n    <h4 css={weightLabel}>\r\n      <span css={cardLabel}>Weight</span>\r\n      {weight}\r\n    </h4>\r\n  );\r\n};","import React from \"react\";\r\n/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport { NameLabel } from \"../NameLabel/NameLabel\";\r\nimport { HeightLabel } from \"../HeightLabel/HeightLabel\";\r\nimport { WeightLabel } from \"../WeightLabel/WeightLabel\";\r\n\r\ninterface ICardParametersProps {\r\n  name: string;\r\n  height: number;\r\n  weight: number;\r\n}\r\n\r\nexport const CardParameters: React.FC<ICardParametersProps> = ({\r\n  name,\r\n  height,\r\n  weight,\r\n}) => {\r\n  const cardParameters = css({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"5px\",\r\n    textTransform: \"capitalize\",\r\n  });\r\n\r\n  return (\r\n    <div css={cardParameters}>\r\n      <HeightLabel height={height} />\r\n      <NameLabel name={name} />\r\n      <WeightLabel weight={weight} />\r\n    </div>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport BaseStat from \"../../models/BaseStat\";\r\n\r\ninterface ICardStatsTableProps {\r\n  baseStat: BaseStat,\r\n}\r\n\r\nexport const StatItem: React.FC<ICardStatsTableProps> = ({ baseStat }) => {\r\n\r\n  const cardStatsTableData = css({\r\n    width: \"50%\",\r\n    padding: \"0.25em 0.5em 0\",\r\n  });\r\n\r\n  const cardStatsTableHeader = css({\r\n    textAlign: \"right\",\r\n    fontWeight: \"lighter\",\r\n  });\r\n  return (\r\n    <tr css={cardStatsTableData}>\r\n      <th css={cardStatsTableHeader}>{baseStat.getName()}</th>\r\n      <td css={cardStatsTableData}>{baseStat.getValue()}</td>\r\n    </tr>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport BaseStat from \"../../models/BaseStat\";\r\nimport { StatItem } from \"../StatItem/StatItem\";\r\n\r\ninterface ICardStatsTableProps {\r\n  baseStats: BaseStat[];\r\n}\r\n\r\nexport const CardStatsTable: React.FC<ICardStatsTableProps> = ({ baseStats }) => {\r\n  const cardStatsTable = css({\r\n    margin: \"1em 0\",\r\n    width: \"100%\",\r\n  });\r\n\r\n  return (\r\n    <table css={cardStatsTable}>\r\n      <tbody>\r\n        {baseStats.map((baseStat, idx) => (\r\n          <StatItem baseStat={baseStat} key={idx}/>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\n\r\ninterface ITypeBadge {\r\n  type: string;\r\n}\r\n\r\nexport const TypeBadge: React.FC<ITypeBadge> = ({ type }) => {\r\n  const getBadgeColor = (type: string) => {\r\n    let badgeColor;\r\n    switch (type) {\r\n      case \"normal\":\r\n        badgeColor = \"#C08A53\";\r\n        break;\r\n      case \"water\":\r\n        badgeColor = \"#1CB5E0\";\r\n        break;\r\n      case \"electric\":\r\n        badgeColor = \"#e6c700\";\r\n        break;\r\n      case \"fire\":\r\n        badgeColor = \"#c71800\";\r\n        break;\r\n      case \"psychic\":\r\n        badgeColor = \"#ff2cc3\";\r\n        break;\r\n      case \"dark\":\r\n        badgeColor = \"#5c0249\";\r\n        break;\r\n      case \"grass\":\r\n        badgeColor = \"#6e7f0e\";\r\n        break;\r\n      case \"ice\":\r\n        badgeColor = \"#6fb8eb\";\r\n        break;\r\n      case \"fairy\":\r\n        badgeColor = \"#ff8a95\";\r\n        break;\r\n      default:\r\n        badgeColor = \"linear-gradient(110deg, #FDBB2D 0%, #3A1C71 100%)\";\r\n    }\r\n    return badgeColor;\r\n  };\r\n\r\n  const TypeBadge = css({\r\n    marginRight: \"1em\",\r\n    color: \"#ffffff\",\r\n    textTransform: \"uppercase\",\r\n    letterTpacing: \"0.1em\",\r\n    padding: \"0.25em\",\r\n    lineHeight: \"1\",\r\n    background: getBadgeColor(type),\r\n    fontWeight: \"lighter\",\r\n    borderRadius: \"2px\",\r\n  });\r\n\r\n  return <h3 css={TypeBadge}>{type}</h3>;\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport { TypeBadge } from \"../TypeBadge/TypeBadge\";\r\n\r\ninterface ICardTypeListProps {\r\n  types: string[];\r\n}\r\n\r\nexport const CardTypeList: React.FC<ICardTypeListProps> = ({ types }) => {\r\n  const cardTypeListContainer = css({\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    margin: \"0\",\r\n    right: \"0\",\r\n    transform: \"translateY(-50%)\",\r\n    display: \"flex\",\r\n  });\r\n\r\n  return (\r\n    <div css={cardTypeListContainer}>\r\n      {types.map((type, idx) => (\r\n        <TypeBadge type={type} key={idx}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\n\r\ninterface IPokemonImgProps{\r\n  src: string;\r\n}\r\n\r\nconst PokemonImg: React.FC<IPokemonImgProps> = ({src}) => {\r\n  const image = css({\r\n    maxHeight: \"150px\",\r\n    textAlign: \"center\",\r\n    margin: \"20px\",\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <img src={src} css={image} alt=\"pokemon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonImg;\r\n\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport Pokemon from \"../../models/Pokemon\";\r\nimport { CardAbilityPanel } from \"../CardAbilityPanel/CardAbilityPanel\";\r\nimport { CardParameters } from \"../CardParameters/CardParameters\";\r\nimport { CardStatsTable } from \"../CardStatsTable/CardStatsTable\";\r\nimport { CardTypeList } from \"../CardTypeList/CardTypeList\";\r\nimport PokemonImg from \"../PokemonImg/PokemonImg\";\r\n\r\ninterface ICardProps {\r\n  pokemon: Pokemon;\r\n}\r\n\r\nconst Card: React.FC<ICardProps> = ({ pokemon }) => {\r\n  const getGradient = (types: string[]) => {\r\n    let type = types[0];\r\n    let cardBackground;\r\n    switch (type) {\r\n      case \"normal\":\r\n        cardBackground = \"linear-gradient(110deg, #FDBB2D 0%, #3A1C71 100%)\";\r\n        break;\r\n      case \"water\":\r\n        cardBackground = \"linear-gradient(120deg, #1CB5E0 0%, #000851 100%)\";\r\n        break;\r\n      case \"electric\":\r\n        cardBackground =\r\n          \"linear-gradient(90deg, rgba(255,222,0,1) 34%, rgba(232,255,153,1) 83%)\";\r\n        break;\r\n      case \"fire\":\r\n        cardBackground =\r\n          \"linear-gradient(0deg, rgba(199,24,0,1) 10%, rgba(252,194,69,1) 100%)\";\r\n        break;\r\n      case \"psychic\":\r\n        cardBackground =\r\n          \"linear-gradient(140deg, rgba(255,167,249,1) 0%, rgba(255,44,195,1) 39%, rgba(255,227,167,1) 100%)\";\r\n        break;\r\n      case \"dark\":\r\n        cardBackground =\r\n          \"linear-gradient(20deg, rgba(25,25,25,1) 0%, rgba(16,11,50,1) 33%, rgba(92,2,73,1) 100%)\";\r\n        break;\r\n      case \"grass\":\r\n        cardBackground =\r\n          \"linear-gradient(140deg, rgba(196,218,61,1) 0%, rgba(110,127,14,1) 69%, rgba(39,80,9,1) 100%)\";\r\n        break;\r\n      case \"ice\":\r\n        cardBackground =\r\n          \"linear-gradient(230deg, rgba(202,234,246,1) 0%, rgba(160,234,241,1) 46%, rgba(111,184,235,1) 100%)\";\r\n        break;\r\n      case \"fairy\":\r\n        cardBackground =\r\n          \"linear-gradient(45deg, rgba(255,230,240,1) 0%, rgba(255,197,224,1) 34%, rgba(255,166,185,1) 71%, rgba(255,138,149,1) 100%)\";\r\n        break;\r\n      default:\r\n        cardBackground = \"linear-gradient(110deg, #FDBB2D 0%, #3A1C71 100%)\";\r\n    }\r\n    return cardBackground;\r\n  };\r\n\r\n  const cardContainer = css({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  });\r\n\r\n  const card = css({\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    width: \"300px\",\r\n    padding: \"1em\",\r\n    borderRadius: \"15px\",\r\n    margin: \"10px\",\r\n    background: getGradient(pokemon.getTypes()),\r\n    boxShadow: \"0px 5px 20px -10px #3A1C71\",\r\n  });\r\n\r\n  const cardImageContainer = css({\r\n    backgroundColor: \"#2B1D19A5\",\r\n    textAlign: \"center\",\r\n    padding: \" 1em 1em 0\",\r\n    borderRadius: \"3px 3px 0 0\",\r\n  });\r\n\r\n  const cardCaption = css({\r\n    backgroundColor: \"#EEDABBA5\",\r\n    padding: \"1em\",\r\n    position: \"relative\",\r\n    borderRadius: \"0 0 3px 3px\",\r\n  });\r\n\r\n  return (\r\n    <div css={cardContainer}>\r\n      <figure css={card}>\r\n        <div css={cardImageContainer}>\r\n          <PokemonImg src={pokemon.getImage()}/>\r\n        </div>\r\n        <figcaption css={cardCaption}>\r\n          <CardParameters\r\n            name={pokemon.getName()}\r\n            height={pokemon.getHeight()}\r\n            weight={pokemon.getWeight()}\r\n          />\r\n          <CardTypeList types={pokemon.getTypes()} />\r\n          <CardStatsTable baseStats={pokemon.getBaseStats()} />\r\n          <CardAbilityPanel abilities={pokemon.getAbilities()} />\r\n        </figcaption>\r\n      </figure>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\n\r\ninterface IButtonProps {\r\n  onButtonClick: React.MouseEventHandler<HTMLButtonElement> | undefined;\r\n}\r\n\r\nconst Button: React.FC<IButtonProps> = ({ onButtonClick }) => {\r\n  const button = css({\r\n    padding: \"12px 20px\",\r\n    margin: \"8px, 0\",\r\n    backgroundColor: \"#5A0349\",\r\n    border: \"none\",\r\n    color: \"white\",\r\n    borderRadius: \"4px\",\r\n  });\r\n  return (\r\n    <button css={button} onClick={onButtonClick}>\r\n      Go\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\n/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\n\r\ninterface IInputProps {\r\n  inputValue: string;\r\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst Input: React.FC<IInputProps> = ({ inputValue, onInputChange }) => {\r\n  const input = css({\r\n    width: \"40%\",\r\n    padding: \"12px 20px\",\r\n    margin: \"8px, 0\",\r\n    border: \"2px solid #F9F9F9\",\r\n    borderRadius: \"4px\",\r\n  });\r\n\r\n  return (\r\n    <input\r\n      css={input}\r\n      value={inputValue}\r\n      onChange={onInputChange}\r\n      placeholder=\"Search\"\r\n    ></input>\r\n  );\r\n};\r\n\r\nexport default Input;","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport Input from \"../Input/Input\";\r\n\r\ninterface ISearchProps {\r\n  onButtonClick: React.MouseEventHandler<HTMLButtonElement> | undefined;\r\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  inputValue: string;\r\n}\r\n\r\nconst Search: React.FC<ISearchProps> = ({onButtonClick, onInputChange, inputValue}) => {\r\n\r\n  const searchContainer = css({\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"10px\",\r\n  });\r\n\r\n  return (\r\n    <div css={searchContainer}>\r\n      <Input inputValue={inputValue} onInputChange={onInputChange} />\r\n      <Button onButtonClick={onButtonClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search\r\n","import React, { useState } from \"react\";\r\nimport Ability from \"../../models/Ability\";\r\nimport BaseStat from \"../../models/BaseStat\";\r\nimport Pokemon from \"../../models/Pokemon\";\r\nimport PokemonService from \"../../services/PokemonService\";\r\nimport Card from \"../Card/Card\";\r\nimport Search from \"../Search/Search\";\r\n\r\nexport default function Main() {\r\n  const pokemonService = new PokemonService(\"https://pokeapi.co/api/v2/\");\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [pokemon, setPokemon] = useState(\r\n    new Pokemon(\r\n      \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/133.png\",\r\n      \"Eevee\",\r\n      12,\r\n      34,\r\n      [\"normal\", \"water\"],\r\n      [\r\n        new Ability(\"static\", false),\r\n        new Ability(\"lightning-rod\", true),\r\n        new Ability(\"static\", false),\r\n      ],\r\n      [\r\n        new BaseStat(55, \"hp\"),\r\n        new BaseStat(55, \"Attack\"),\r\n        new BaseStat(45, \"Special Attack\"),\r\n        new BaseStat(65, \"Special Defense\"),\r\n        new BaseStat(55, \"Speed\"),\r\n      ]\r\n    )\r\n  );\r\n\r\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const onButtonClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    pokemonService.getPokemon(inputValue).then((pokemon) => {\r\n      setPokemon(pokemon);\r\n      console.log(pokemon);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Search\r\n        onButtonClick={onButtonClick}\r\n        onInputChange={onInputChange}\r\n        inputValue={inputValue}\r\n      />\r\n      <Card pokemon={pokemon} />\r\n    </>\r\n  );\r\n}\r\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n  const app = css({\n    fontFamily: \"Open Sans Condensed, Open Sans, Helvetica, sans-serif\",\n    margin: \"20px\",\n  });\n\n  return (\n    <div css={app}>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}