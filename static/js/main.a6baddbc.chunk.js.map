{"version":3,"sources":["models/Ability.ts","models/BaseStat.ts","models/Pokemon.ts","models/Converter.ts","services/PokemonService.ts","components/AbilityItem/AbilityItem.tsx","components/CardAbilityList/CardAbilityList.tsx","components/CardAbilityPanel/CardAbilityPanel.tsx","components/NameLabel/NameLabel.tsx","components/HeightLabel/HeightLabel.tsx","components/WeightLabel/WeightLabel.tsx","components/CardParameters/CardParameters.tsx","components/StatItem/StatItem.tsx","components/CardStatsTable/CardStatsTable.tsx","components/TypeBadge/TypeBadge.tsx","components/CardTypeList/CardTypeList.tsx","components/PokemonImg/PokemonImg.tsx","components/Card/Card.tsx","components/CardContainer/CardContainer.tsx","colors.ts","components/ErrorMessage/ErrorMessage.tsx","components/Loader/Loader.tsx","components/Button/Button.tsx","components/Input/Input.tsx","components/Search/Search.tsx","components/Main/Main.tsx","App.tsx","index.tsx"],"names":["Ability","name","isHidden","this","BaseStat","value","Pokemon","images","height","weight","types","abilities","baseStats","Converter","obj","toImagesSrc","sprites","map","item","toType","toAbility","stats","toBaseStat","imageObj","other","front_default","back_default","dream_world","abilityObj","ability","is_hidden","baseObj","base_stat","stat","typeObj","type","results","result","PokemonService","baseUrl","axios","create","baseURL","get","then","response","toPokemon","data","id","toPokemonNames","AbilityItem","abilityItem","css","marginBottom","textTransform","getName","CardAbilityList","abilityItemTitle","marginTop","flex","textAlign","fontSize","display","filter","getIsHidden","CardAbilityPanel","cardAbilityPanel","justifyContent","NameLabel","nameLabel","letterSpacing","fontWeight","margin","HeightLabel","heightLabel","cardLabel","WeightLabel","weightLabel","CardParameters","cardParameters","StatItem","baseStat","cardStatsTableData","width","padding","cardStatsTableHeader","progres","Math","min","getValue","backgroundColor","color","progresColor","CardStatsTable","cardStatsTable","TypeBadge","useState","setColor","useEffect","getBadgeColor","badgeColor","marginRight","letterTpacing","lineHeight","background","borderRadius","CardTypeList","cardTypeListContainer","position","top","right","transform","PokemonImg","srcArray","image","maxWidth","maxHeight","showArrows","showThumbs","infiniteLoop","src","alt","Card","pokemon","gradient","setGradient","rotation","setRotation","cardBackground","getGradient","getTypes","floor","random","card","boxShadow","cursor","zIndex","cardImageContainer","cardCaption","minHeight","getImages","getHeight","getWeight","getBaseStats","getAbilities","CardContainer","cardContainer","flexWrap","DEFAULT_LIGHT","WHITE","ErrorMessage","message","messageContainer","Loader","loader","Button","onButtonClick","button","border","onClick","Input","inputValue","suggestions","onInputChange","onEnter","inputRef","useRef","input","outline","onChange","event","target","placeholder","onKeyDown","key","ref","list","suggestion","startsWith","slice","innerText","current","focus","Search","onSubmit","pokemonService","pokemonNames","setPokemonNames","getPokemonNames","names","searchContainer","Main","setInputValue","invalidPokemonNameMessage","setInvalidPokemonNameMessage","setPokemon","showLoader","setShowLoader","i","getPokemonById","max","randomPokemon","tmp","push","getPokemonByName","toLowerCase","catch","error","a","newString","App","app","fontFamily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6baddbc.chunk.js","sourcesContent":["export default class Ability {\n  private name: string;\n  private isHidden: boolean;\n\n  constructor(name: string, isHidden: boolean) {\n    this.name = name;\n    this.isHidden = isHidden;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public getIsHidden(): boolean {\n    return this.isHidden;\n  }\n}\n","export default class BaseStat {\n  private value: number;\n  private name: string;\n\n  constructor(value: number, name: string) {\n    this.value = value;\n    this.name = name;\n  }\n\n  public getValue(): number {\n    return this.value;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n}\n","import Ability from \"./Ability\";\nimport BaseStat from \"./BaseStat\";\n\nexport default class Pokemon {\n  private images: string[];\n  private name: string;\n  private height: number;\n  private weight: number;\n  private types: string[];\n  private abilities: Ability[];\n  private baseStats: BaseStat[];\n\n  constructor(\n    images: string[],\n    name: string,\n    height: number,\n    weight: number,\n    types: string[],\n    abilities: Ability[],\n    baseStats: BaseStat[]\n  ) {\n    this.images = images;\n    this.name = name;\n    this.height = height;\n    this.weight = weight;\n    this.types = types;\n    this.abilities = abilities;\n    this.baseStats = baseStats;\n  }\n\n  public getImages(): string[] {\n    return this.images;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public getHeight(): number {\n    return this.height;\n  }\n  public getWeight(): number {\n    return this.weight;\n  }\n\n  public getTypes(): string[] {\n    return this.types;\n  }\n\n  public getAbilities(): Ability[] {\n    return this.abilities;\n  }\n\n  public getBaseStats(): BaseStat[] {\n    return this.baseStats;\n  }\n}\n","import Ability from \"./Ability\";\nimport BaseStat from \"./BaseStat\";\nimport Pokemon from \"./Pokemon\";\n\nexport default class Converter {\n  private constructor() {\n    // intentionally left blank\n  }\n\n  static toPokemon(obj: any): Pokemon {\n    return new Pokemon(\n      this.toImagesSrc(obj.sprites),\n      obj.name,\n      obj.height,\n      obj.weight,\n      obj.types.map((item: any) => this.toType(item)),\n      obj.abilities.map((item: any) => this.toAbility(item)),\n      obj.stats.map((item: any) => this.toBaseStat(item))\n    );\n  }\n\n  static toImagesSrc(imageObj: any): string[] {\n    const images = [\n      imageObj.other[\"official-artwork\"].front_default,\n      imageObj.front_default,\n      imageObj.back_default,\n      imageObj.other.dream_world.front_default,\n    ];\n    return images;\n  }\n\n  static toAbility(abilityObj: any): Ability {\n    return new Ability(abilityObj.ability.name, abilityObj.is_hidden);\n  }\n\n  static toBaseStat(baseObj: any): BaseStat {\n    return new BaseStat(baseObj.base_stat, baseObj.stat.name);\n  }\n\n  static toType(typeObj: any): string[] {\n    return typeObj.type.name;\n  }\n\n  static toPokemonNames(obj: any): string[] {\n    return obj.results.map(\n      (result: { name: string; url: string }) => result.name\n    );\n  }\n}\n","import axios, { AxiosInstance } from \"axios\";\nimport Converter from \"../models/Converter\";\nimport Pokemon from \"../models/Pokemon\";\n\nexport default class PokemonService {\n  private baseUrl: string;\n  private axios: AxiosInstance;\n\n  constructor(baseUrl: string) {\n    this.baseUrl = baseUrl;\n    this.axios = axios.create({\n      baseURL: this.baseUrl,\n    });\n  }\n\n  public getPokemonByName(name: string): Promise<Pokemon> {\n    return this.axios\n      .get(`/pokemon/${name}`)\n      .then((response) => Converter.toPokemon(response.data));\n  }\n\n  public getPokemonById(id: number): Promise<Pokemon> {\n    return this.axios\n      .get(`/pokemon/${id}`)\n      .then((response) => Converter.toPokemon(response.data));\n  }\n\n  public getPokemonNames(): Promise<string[]> {\n    return this.axios.get(\"/pokemon/?limit=1500\").then((response) => {\n      return Converter.toPokemonNames(response.data);\n    });\n  }\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport Ability from \"../../models/Ability\";\n\ninterface IAbilityItemProps {\n  ability: Ability;\n}\n\nexport const AbilityItem: React.FC<IAbilityItemProps> = ({ ability }) => {\n  const abilityItem = css({\n    marginBottom: \"3px\",\n    textTransform: \"capitalize\",\n  });\n  return <div css={abilityItem}>{ability.getName()}</div>;\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport Ability from \"../../models/Ability\";\nimport { AbilityItem } from \"../AbilityItem/AbilityItem\";\n\ninterface ICardAbilitiesProps {\n  abilities: Ability[];\n  isHidden: boolean;\n}\n\nexport const CardAbilityList: React.FC<ICardAbilitiesProps> = ({\n  abilities,\n  isHidden,\n}) => {\n  const abilityItemTitle = css({\n    marginTop: \"1em\",\n    marginBottom: \"0.5em\",\n    flex: \"1 0\",\n    textAlign: \"center\",\n  });\n  const abilityItem = css({\n    fontSize: \"10px\",\n    textTransform: \"uppercase\",\n    display: \"block\",\n    marginBottom: \"3px\",\n  });\n\n  return (\n    <h4 css={abilityItemTitle}>\n      <span css={abilityItem}>{isHidden ? \"Hidden\" : \"\"} Ability</span>\n      {abilities\n        .filter((ability) => ability.getIsHidden() === isHidden)\n        .map((ability) => (\n          <AbilityItem ability={ability} key={ability.getName()} />\n        ))}\n    </h4>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport Ability from \"../../models/Ability\";\nimport { CardAbilityList } from \"../CardAbilityList/CardAbilityList\";\n\ninterface ICardAbilityPanelProps {\n  abilities: Ability[];\n}\n\nexport const CardAbilityPanel: React.FC<ICardAbilityPanelProps> = ({\n  abilities,\n}) => {\n  const cardAbilityPanel = css({\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  });\n\n  return (\n    <div css={cardAbilityPanel}>\n      <CardAbilityList abilities={abilities} isHidden={false} />\n      <CardAbilityList abilities={abilities} isHidden={true} />\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\n\ninterface INameLabelProps {\n  name: string;\n}\n\nexport const NameLabel: React.FC<INameLabelProps> = ({ name }) => {\n  const nameLabel = css({\n    letterSpacing: \"0.02em\",\n    fontWeight: \"bold\",\n    flex: \"1 0\",\n    margin: \"0\",\n    textAlign: \"center\",\n  });\n\n  return <h3 css={nameLabel}>{name}</h3>;\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\n\ninterface IHeightLabelProps {\n  height: number;\n}\n\nexport const HeightLabel: React.FC<IHeightLabelProps> = ({ height }) => {\n  const heightLabel = css({\n    margin: \"0\",\n    flex: \"1 0\",\n  });\n\n  const cardLabel = css({\n    fontSize: \"10px\",\n    textTransform: \"uppercase\",\n    display: \"block\",\n    marginBottom: \"3px\",\n  });\n\n  return (\n    <h4 css={heightLabel}>\n      <span css={cardLabel}>Height</span>\n      {height}\n    </h4>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\n\ninterface IWeightBadgeProps {\n  weight: number;\n}\n\nexport const WeightLabel: React.FC<IWeightBadgeProps> = ({ weight }) => {\n  const weightLabel = css({\n    margin: \"0\",\n    flex: \"1 0\",\n    textAlign: \"right\",\n  });\n\n  const cardLabel = css({\n    fontSize: \"10px\",\n    textTransform: \"uppercase\",\n    display: \"block\",\n    marginBottom: \"3px\",\n  });\n\n  return (\n    <h4 css={weightLabel}>\n      <span css={cardLabel}>Weight</span>\n      {weight}\n    </h4>\n  );\n};\n","import React from \"react\";\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { NameLabel } from \"../NameLabel/NameLabel\";\nimport { HeightLabel } from \"../HeightLabel/HeightLabel\";\nimport { WeightLabel } from \"../WeightLabel/WeightLabel\";\n\ninterface ICardParametersProps {\n  name: string;\n  height: number;\n  weight: number;\n}\n\nexport const CardParameters: React.FC<ICardParametersProps> = ({\n  name,\n  height,\n  weight,\n}) => {\n  const cardParameters = css({\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"5px\",\n    textTransform: \"capitalize\",\n  });\n\n  return (\n    <div css={cardParameters}>\n      <HeightLabel height={height} />\n      <NameLabel name={name} />\n      <WeightLabel weight={weight} />\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport BaseStat from \"../../models/BaseStat\";\n\ninterface ICardStatsTableProps {\n  baseStat: BaseStat;\n}\n\nexport const StatItem: React.FC<ICardStatsTableProps> = ({ baseStat }) => {\n  const progresColor = (value: number) => {\n    let color;\n    switch (true) {\n      case value <= 20:\n        color = \"#e81b10\";\n        break;\n      case value <= 40:\n        color = \"#e85f10\";\n        break;\n      case value <= 60:\n        color = \"#e8e410\";\n        break;\n      case value <= 80:\n        color = \"#a0e810\";\n        break;\n      case value <= 100:\n        color = \"#14e810\";\n        break;\n      default:\n        color = \"#10e88a\";\n    }\n    return color;\n  };\n\n  const cardStatsTableData = css({\n    width: \"50%\",\n    padding: \"0.25em 0.5em 0\",\n  });\n\n  const cardStatsTableHeader = css({\n    textAlign: \"right\",\n    fontWeight: \"lighter\",\n  });\n\n  const progres = css({\n    height: \"12px\",\n    width: `${Math.min(baseStat.getValue(), 105)}%`,\n    backgroundColor: progresColor(baseStat.getValue()),\n  });\n\n  return (\n    <tr css={cardStatsTableData}>\n      <th css={cardStatsTableHeader}>{baseStat.getName()}</th>\n      <td css={cardStatsTableData}>\n        {baseStat.getValue()} <div css={progres}></div>\n      </td>\n    </tr>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport BaseStat from \"../../models/BaseStat\";\nimport { StatItem } from \"../StatItem/StatItem\";\n\ninterface ICardStatsTableProps {\n  baseStats: BaseStat[];\n}\n\nexport const CardStatsTable: React.FC<ICardStatsTableProps> = ({\n  baseStats,\n}) => {\n  const cardStatsTable = css({\n    margin: \"1em 0\",\n    width: \"100%\",\n  });\n\n  return (\n    <table css={cardStatsTable}>\n      <tbody>\n        {baseStats.map((baseStat) => (\n          <StatItem\n            baseStat={baseStat}\n            key={baseStat.getName() + baseStat.getValue()}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface ITypeBadge {\n  type: string;\n}\n\nexport const TypeBadge: React.FC<ITypeBadge> = ({ type }) => {\n  const [color, setColor] = useState<string>(\"\");\n\n  useEffect(() => {\n    setColor(getBadgeColor(type));\n  }, [type]);\n\n  const getBadgeColor = (type: string) => {\n    let badgeColor;\n    switch (type) {\n      case \"normal\":\n        badgeColor = \"#C08A53\";\n        break;\n      case \"water\":\n        badgeColor = \"#1CB5E0\";\n        break;\n      case \"electric\":\n        badgeColor = \"#e6c700\";\n        break;\n      case \"fire\":\n        badgeColor = \"#c71800\";\n        break;\n      case \"psychic\":\n        badgeColor = \"#ff2cc3\";\n        break;\n      case \"dark\":\n        badgeColor = \"#5c0249\";\n        break;\n      case \"grass\":\n        badgeColor = \"#6e7f0e\";\n        break;\n      case \"ice\":\n        badgeColor = \"#6fb8eb\";\n        break;\n      case \"fairy\":\n        badgeColor = \"#ff8a95\";\n        break;\n      default:\n        badgeColor = \"#C08A53\";\n    }\n    return badgeColor;\n  };\n\n  const TypeBadge = css({\n    marginRight: \"1em\",\n    color: \"#ffffff\",\n    textTransform: \"uppercase\",\n    letterTpacing: \"0.1em\",\n    padding: \"0.25em\",\n    lineHeight: \"1\",\n    background: color,\n    fontWeight: \"lighter\",\n    borderRadius: \"2px\",\n  });\n\n  return <h3 css={TypeBadge}>{type}</h3>;\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { TypeBadge } from \"../TypeBadge/TypeBadge\";\n\ninterface ICardTypeListProps {\n  types: string[];\n}\n\nexport const CardTypeList: React.FC<ICardTypeListProps> = ({ types }) => {\n  const cardTypeListContainer = css({\n    position: \"absolute\",\n    top: \"0\",\n    margin: \"0\",\n    right: \"0\",\n    transform: \"translateY(-50%)\",\n    display: \"flex\",\n  });\n\n  return (\n    <div css={cardTypeListContainer}>\n      {types.map((type) => (\n        <TypeBadge type={type} key={type} />\n      ))}\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\ninterface IPokemonImgProps {\n  srcArray: string[];\n}\n\nconst PokemonImg: React.FC<IPokemonImgProps> = ({ srcArray }) => {\n  const image = css({\n    maxWidth: \"150px\",\n    maxHeight: \"150px\",\n    textAlign: \"center\",\n    margin: \"20px\",\n  });\n\n  return (\n    <Carousel showArrows={true} showThumbs={false} infiniteLoop={true}>\n      {srcArray\n        .filter((src) => src !== null)\n        .map((src) => (\n          <img src={src} css={image} alt=\"pokemon\" key={src} />\n        ))}\n    </Carousel>\n  );\n};\n\nexport default PokemonImg;\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React, { useEffect, useState } from \"react\";\nimport Pokemon from \"../../models/Pokemon\";\nimport { CardAbilityPanel } from \"../CardAbilityPanel/CardAbilityPanel\";\nimport { CardParameters } from \"../CardParameters/CardParameters\";\nimport { CardStatsTable } from \"../CardStatsTable/CardStatsTable\";\nimport { CardTypeList } from \"../CardTypeList/CardTypeList\";\nimport PokemonImg from \"../PokemonImg/PokemonImg\";\n\ninterface ICardProps {\n  pokemon: Pokemon | null;\n}\n\nconst Card: React.FC<ICardProps> = ({ pokemon }) => {\n  const [gradient, setGradient] = useState<string>(\"\");\n  const [rotation, setRotation] = useState<number>(0);\n\n  const getGradient = (types: string[]) => {\n    let type = types[0];\n    let cardBackground;\n    switch (type) {\n      case \"normal\":\n        cardBackground = \"linear-gradient(110deg, #FDBB2D 0%, #3A1C71 100%)\";\n        break;\n      case \"water\":\n        cardBackground = \"linear-gradient(120deg, #1CB5E0 0%, #000851 100%)\";\n        break;\n      case \"electric\":\n        cardBackground =\n          \"linear-gradient(90deg, rgba(255,222,0,1) 34%, rgba(232,255,153,1) 83%)\";\n        break;\n      case \"fire\":\n        cardBackground =\n          \"linear-gradient(0deg, rgba(199,24,0,1) 10%, rgba(252,194,69,1) 100%)\";\n        break;\n      case \"psychic\":\n        cardBackground =\n          \"linear-gradient(140deg, rgba(255,167,249,1) 0%, rgba(255,44,195,1) 39%, rgba(255,227,167,1) 100%)\";\n        break;\n      case \"dark\":\n        cardBackground =\n          \"linear-gradient(20deg, rgba(25,25,25,1) 0%, rgba(16,11,50,1) 33%, rgba(92,2,73,1) 100%)\";\n        break;\n      case \"grass\":\n        cardBackground =\n          \"linear-gradient(140deg, rgba(196,218,61,1) 0%, rgba(110,127,14,1) 69%, rgba(39,80,9,1) 100%)\";\n        break;\n      case \"ice\":\n        cardBackground =\n          \"linear-gradient(230deg, rgba(202,234,246,1) 0%, rgba(160,234,241,1) 46%, rgba(111,184,235,1) 100%)\";\n        break;\n      case \"fairy\":\n        cardBackground =\n          \"linear-gradient(45deg, rgba(255,230,240,1) 0%, rgba(255,197,224,1) 34%, rgba(255,166,185,1) 71%, rgba(255,138,149,1) 100%)\";\n        break;\n      default:\n        cardBackground = \"linear-gradient(110deg, #FDBB2D 0%, #3A1C71 100%)\";\n    }\n    return cardBackground;\n  };\n\n  useEffect(() => {\n    setGradient(pokemon == null ? \"\" : getGradient(pokemon.getTypes()));\n    setRotation(5 - Math.floor(Math.random() * 10));\n  }, [pokemon]);\n\n  const card = css({\n    display: \"inline-block\",\n    position: \"relative\",\n    width: \"300px\",\n    padding: \"1em\",\n    borderRadius: \"15px\",\n    margin: \"10px\",\n    background: gradient,\n    boxShadow: \"0px 5px 20px -10px #3A1C71\",\n    transform: `rotate(${rotation}deg)`,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      zIndex: 5,\n      boxShadow: \"0px 13px 30px -15px #000000\",\n      transform: \"translateY(-10px)\",\n    },\n  });\n\n  const cardImageContainer = css({\n    backgroundColor: \"#2B1D19A5\",\n    textAlign: \"center\",\n    padding: \" 1em 0.5em\",\n    borderRadius: \"3px 3px 0 0\",\n  });\n\n  const cardCaption = css({\n    backgroundColor: \"#EEDABBA5\",\n    padding: \"1em\",\n    position: \"relative\",\n    borderRadius: \"0 0 3px 3px\",\n    minHeight: \"402px\",\n  });\n\n  return (\n    <>\n      {pokemon == null ? (\n        \"\"\n      ) : (\n        <figure css={card}>\n          <div css={cardImageContainer}>\n            <PokemonImg srcArray={pokemon.getImages()} />\n          </div>\n          <figcaption css={cardCaption}>\n            <CardParameters\n              name={pokemon.getName()}\n              height={pokemon.getHeight()}\n              weight={pokemon.getWeight()}\n            />\n            <CardTypeList types={pokemon.getTypes()} />\n            <CardStatsTable baseStats={pokemon.getBaseStats()} />\n            <CardAbilityPanel abilities={pokemon.getAbilities()} />\n          </figcaption>\n        </figure>\n      )}\n    </>\n  );\n};\nexport default Card;\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport Pokemon from \"../../models/Pokemon\";\nimport Card from \"../Card/Card\";\n\ninterface ICardContainerProps {\n  pokemon: Pokemon[];\n}\n\nconst CardContainer: React.FC<ICardContainerProps> = ({ pokemon }) => {\n  const cardContainer = css({\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n  });\n  return (\n    <div css={cardContainer}>\n      {pokemon.map((pokemon) => (\n        <Card pokemon={pokemon} key={pokemon.getName()} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardContainer;\n","export const PRIMARY_LIGHT = \"#ba68c8\";\nexport const PRIMARY_MAIN = \"#9c27b0\";\nexport const ERROR = \"#ef5350\";\nexport const INFO = \"#03a9f4\";\nexport const DEFAULT = \"#b3b3b3\";\nexport const DEFAULT_LIGHT = \"#d9d9d9\";\nexport const WHITE = \"#ffffff\";\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { ERROR, WHITE } from \"../../colors\";\n\ninterface IErrorMessageProps {\n  message: string;\n}\n\nconst ErrorMessage: React.FC<IErrorMessageProps> = ({ message }) => {\n  const messageContainer = css({\n    padding: \"20px\",\n    backgroundColor: ERROR,\n    color: WHITE,\n    textAlign: \"center\",\n    borderRadius: \"4px\",\n    maxWidth: \"300px\",\n    margin: \"20px auto\",\n  });\n  return <div css={messageContainer}>{message}</div>;\n};\n\nexport default ErrorMessage;\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { DEFAULT_LIGHT, INFO } from \"../../colors\";\n\nexport default function Loader() {\n  const loader = css`\n    border: 4px solid ${DEFAULT_LIGHT};\n    border-radius: 50%;\n    border-top: 4px solid ${INFO};\n    width: 25px;\n    height: 25px;\n    animation: spin 2s linear infinite;\n    margin: auto;\n\n    @keyframes spin {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  `;\n\n  return <div css={loader}></div>;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport { PRIMARY_LIGHT, PRIMARY_MAIN, WHITE } from \"../../colors\";\n\ninterface IButtonProps {\n  onButtonClick: React.MouseEventHandler<HTMLButtonElement> | undefined;\n}\n\nconst Button: React.FC<IButtonProps> = ({ onButtonClick }) => {\n  const button = css({\n    padding: \"12px 20px\",\n    margin: \"8px, 0\",\n    backgroundColor: PRIMARY_LIGHT,\n    color: WHITE,\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    \"&:active\": {\n      backgroundColor: PRIMARY_MAIN,\n    },\n  });\n  return (\n    <button css={button} onClick={onButtonClick}>\n      Go\n    </button>\n  );\n};\n\nexport default Button;\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React, { useRef } from \"react\";\nimport { DEFAULT, DEFAULT_LIGHT } from \"../../colors\";\n\ninterface IInputProps {\n  inputValue: string;\n  suggestions: string[];\n  onInputChange: (newInput: string) => void;\n  onEnter: () => void;\n}\n\nconst Input: React.FC<IInputProps> = ({\n  inputValue,\n  suggestions,\n  onInputChange,\n  onEnter,\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const input = css({\n    width: \"80%\",\n    padding: \"12px 20px\",\n    border: `2px solid ${DEFAULT_LIGHT}`,\n    borderRadius: \"4px\",\n    \"&:focus\": {\n      outline: \"none\",\n      border: `2px solid ${DEFAULT}`,\n    },\n  });\n\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (event.key === \"Enter\") {\n      onEnter();\n    }\n  };\n\n  return (\n    <div>\n      <input\n        css={input}\n        value={inputValue}\n        onChange={(event) => {\n          onInputChange(event.target.value);\n        }}\n        placeholder=\"Search\"\n        onKeyDown={onKeyDown}\n        ref={inputRef}\n        list=\"suggestions-list\"\n      ></input>\n\n      <datalist id=\"suggestions-list\">\n        {suggestions\n          .filter(\n            (suggestion) =>\n              inputValue !== \"\" && suggestion.startsWith(inputValue)\n          )\n          .slice(0, 5)\n          .map((suggestion) => (\n            <option\n              key={suggestion}\n              onClick={(event) => {\n                onInputChange((event.target as HTMLElement).innerText);\n                inputRef.current?.focus();\n              }}\n              value={suggestion}\n            />\n          ))}\n      </datalist>\n    </div>\n  );\n};\n\nexport default Input;\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React, { useEffect, useState } from \"react\";\nimport PokemonService from \"../../services/PokemonService\";\nimport Button from \"../Button/Button\";\nimport Input from \"../Input/Input\";\n\ninterface ISearchProps {\n  onSubmit: () => void;\n  onInputChange: (newString: string) => void;\n  inputValue: string;\n  pokemonService: PokemonService;\n}\n\nconst Search: React.FC<ISearchProps> = ({\n  onSubmit,\n  onInputChange,\n  inputValue,\n  pokemonService,\n}) => {\n  const [pokemonNames, setPokemonNames] = useState<string[]>([]);\n\n  useEffect(() => {\n    pokemonService.getPokemonNames().then((names) => setPokemonNames(names));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const searchContainer = css({\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: \"10px\",\n  });\n\n  return (\n    <div css={searchContainer}>\n      <Input\n        inputValue={inputValue}\n        suggestions={pokemonNames}\n        onInputChange={onInputChange}\n        onEnter={onSubmit}\n      />\n      <Button onButtonClick={onSubmit} />\n    </div>\n  );\n};\n\nexport default Search;\n","/** @jsxImportSource @emotion/react */\nimport React, { useEffect, useState } from \"react\";\nimport Pokemon from \"../../models/Pokemon\";\nimport PokemonService from \"../../services/PokemonService\";\nimport CardContainer from \"../CardContainer/CardContainer\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Loader from \"../Loader/Loader\";\nimport Search from \"../Search/Search\";\n\nexport default function Main() {\n  const pokemonService = new PokemonService(\"https://pokeapi.co/api/v2/\");\n  const randomNumber = function (max: number): number {\n    return Math.floor(Math.random() * max);\n  };\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [invalidPokemonNameMessage, setInvalidPokemonNameMessage] =\n    useState(\"\");\n  const [pokemon, setPokemon] = useState<Pokemon[]>([]);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    for (let i = 0; i < 4; ++i) {\n      pokemonService.getPokemonById(randomNumber(898)).then((randomPokemon) => {\n        let tmp = pokemon;\n        tmp.push(randomPokemon);\n        setPokemon([...tmp]);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onInputChange = (newString: string): void => {\n    setInputValue(newString);\n  };\n\n  const onButtonClick = () => {\n    if (inputValue === \"\") {\n      return;\n    }\n    setShowLoader(true);\n    pokemonService\n      .getPokemonByName(inputValue.toLowerCase())\n      .then((pokemon) => {\n        setPokemon([pokemon]);\n        setInputValue(\"\");\n        setInvalidPokemonNameMessage(\"\");\n      })\n      .catch((error) => {\n        setInvalidPokemonNameMessage(\"Error\");\n      })\n      .then((a) => {\n        setShowLoader(false);\n      });\n  };\n\n  return (\n    <>\n      <Search\n        onSubmit={onButtonClick}\n        onInputChange={onInputChange}\n        inputValue={inputValue}\n        pokemonService={pokemonService}\n      />\n      {showLoader ? <Loader /> : \"\"}\n      {invalidPokemonNameMessage ? (\n        <ErrorMessage message=\"To see pokemon card please input valid pokemon name\" />\n      ) : (\n        <CardContainer pokemon={pokemon} />\n      )}\n    </>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport React from \"react\";\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n  const app = css({\n    fontFamily: \"Open Sans Condensed, Open Sans, Helvetica, sans-serif\",\n    padding: \"20px\",\n  });\n\n  return (\n    <div css={app}>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}